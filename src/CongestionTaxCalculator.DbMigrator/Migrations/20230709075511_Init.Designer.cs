// <auto-generated />
using CongestionTaxCalculator.DbMigrator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CongestionTaxCalculator.DbMigrator.Migrations
{
    [DbContext(typeof(CongestionTaxContext))]
    [Migration("20230709075511_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.CityVehicle", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsExempt")
                        .HasColumnType("bit");

                    b.HasKey("CityId", "VehicleId");

                    b.HasIndex("VehicleId");

                    b.ToTable("CityVehicles");
                });

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("VehicleType")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.CityVehicle", b =>
                {
                    b.HasOne("CongestionTaxCalculator.Domain.Persistence.City", "City")
                        .WithMany("CityVehicles")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CongestionTaxCalculator.Domain.Persistence.Vehicle", "Vehicle")
                        .WithMany("CityVehicles")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.City", b =>
                {
                    b.Navigation("CityVehicles");
                });

            modelBuilder.Entity("CongestionTaxCalculator.Domain.Persistence.Vehicle", b =>
                {
                    b.Navigation("CityVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
